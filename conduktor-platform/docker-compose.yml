version: '2.1'

services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "19092:19092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9001
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:7.3.2
    hostname: kafka-schema-registry
    container_name: kafka-schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:19092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zoo1
      - kafka1

  conduktor-platform:
    image: conduktor/conduktor-platform:latest
    container_name: conduktor-platform
    ports:
      - "8080:8080"
    volumes:
      - conduktor_data:/var/conduktor
      - ./platform-config.yaml:/opt/conduktor/platform-config.yaml
    depends_on:
      - kafka1
      - kafka-schema-registry
    environment:
      CDK_IN_CONF_FILE: /opt/conduktor/platform-config.yaml
      KAFKA_BOOTSTRAP_SERVER: PLAINTEXT://kafka1:19092
      SR_SERVER: "http://kafka-schema-registry:8081"
      ORGANISATION_NAME: "default"
      ADMIN_EMAIL: "admin@admin.io"
      ADMIN_PSW: "admin"

  opensearch:
    image: opensearchproject/opensearch:1.3.8
    container_name: opensearch
    ports:
      - "9200:9200"   #REST API
      - "9600:9600"   #Performance Analyzer
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    environment:
      discovery.type: single-node
      plugins.security.disabled: true
      compatibility.override_main_response_version: true
#      bootstrap.memory_lock: true # Disable JVM heap memory swapping
#      OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
#    ulimits:
#      memlock:
#        soft: -1 # Set memlock to unlimited (no soft or hard limit)
#        hard: -1
#      nofile:
#        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
#        hard: 65536
    networks:
      - opensearch-net

  opensearch-dashboard:
    image: opensearchproject/opensearch-dashboards:1.3.8
    container_name: opensearch-dashboard
    ports:
      - "5601:5601"
#    expose:
#      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: "true"
    depends_on:
      - opensearch
    networks:
      - opensearch-net

volumes:
  conduktor_data: {}
  opensearch_data: {}

networks:
  opensearch-net: